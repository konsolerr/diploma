Реализация Frontend и пользовательского интерфейса
----------

Задачи, которые ставились перед пользовательским интерфейсом на данном этапе: предоставление доступа к функциональности и удобство пользования. Для удобства пользования рабочая зона главной страницы сервиса разделена на два блока: в одном можно выбрать датасет для работы или выбрать создание датасета, во втором пользователь может работать над текущим датасетом (в том числе просматривая представления -- результаты работы над текущим датасетом) или создать датасет.

Второй блок также состоит из некоторых составляющих:

1. Отображение showKnit текущего датасета.
2. Блок с загрузкой файлов сессии (если он присутствуют).
3. Блок с кодом для получения текущего датасета (изначально скрыт, можно раскрыть кнопкой).
4. Блок предоставляющий возможность совершений операций над датасетом.

Интерфейс и его блоки можно посмотреть в приложении на рисунке в приложении Б.


### Использование JavaScript ###

На языке Javascript была реализована большая часть клиентской логики:

1. Прежде всего, был реализован указанный на \inlref{рисунке}{img:mech} механизм взаимодействия.
2. Получаемые в формате JSON-данные сериализуются в JavaScript-объекты, которые с помощью двойного связывания данных отображаются в интерфейсе пользователя.

Также JavaScript, в частности библиотека highlight.js \cite{highlightjs}, был использован для подсветки синтаксиса исходного R-кода, получаемого от сервера.
